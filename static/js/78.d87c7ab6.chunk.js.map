{"version":3,"file":"static/js/78.d87c7ab6.chunk.js","mappings":"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","sources":["../node_modules/@chakra-ui/icons/dist/chunk-NPI7TFUC.mjs","../node_modules/@chakra-ui/icons/dist/chunk-NIMLFBFN.mjs","components/ContactForm/ContactForm.jsx","../node_modules/@chakra-ui/layout/dist/chunk-Z47J5YMH.mjs","../node_modules/@chakra-ui/icons/dist/chunk-HFJCK6H7.mjs","components/Contacts/Contacts.jsx","../node_modules/@chakra-ui/icons/dist/chunk-XOVTCM5B.mjs","components/Filter/Filter.jsx","pages/Contacts/ContactsPage.jsx"],"sourcesContent":["// src/Chat.tsx\nimport { createIcon } from \"@chakra-ui/icon\";\nvar ChatIcon = createIcon({\n  d: \"M0.913134,0.920639 C1.49851,0.331726 2.29348,0 3.12342,0 L10.8766,0 C11.7065,0 12.5015,0.331725 13.0869,0.920639 C13.6721,1.50939 14,2.30689 14,3.13746 L14,8.12943 C13.9962,8.51443 13.9059,8.97125 13.7629,9.32852 C13.6128,9.683 13.3552,10.0709 13.0869,10.3462 C12.813,10.6163 12.4265,10.8761 12.0734,11.0274 C11.7172,11.1716 11.2607,11.263 10.8766,11.2669 L10.1234,11.2669 L10.1234,12.5676 L10.1209,12.5676 C10.1204,12.793 10.0633,13.0791 9.97807,13.262 C9.8627,13.466 9.61158,13.7198 9.40818,13.8382 L9.40824,13.8383 C9.4077,13.8386 9.40716,13.8388 9.40661,13.8391 C9.40621,13.8393 9.4058,13.8396 9.40539,13.8398 L9.40535,13.8397 C9.22958,13.9254 8.94505,13.9951 8.75059,14 L8.74789,14 C8.35724,13.9963 7.98473,13.8383 7.71035,13.5617 L5.39553,11.2669 L3.12342,11.2669 C2.29348,11.2669 1.49851,10.9352 0.913134,10.3462 C0.644826,10.0709 0.387187,9.683 0.23711,9.32852 C0.0941235,8.97125 0.00379528,8.51443 0,8.12943 L0,3.13746 C0,2.30689 0.327915,1.50939 0.913134,0.920639 Z M3.12342,1.59494 C2.71959,1.59494 2.33133,1.75628 2.04431,2.04503 C1.75713,2.33395 1.59494,2.72681 1.59494,3.13746 L1.59494,8.12943 C1.59114,8.35901 1.62114,8.51076 1.71193,8.72129 C1.79563,8.9346 1.88065,9.06264 2.04431,9.22185 C2.33133,9.5106 2.71959,9.67195 3.12342,9.67195 L5.72383,9.67195 C5.93413,9.67195 6.13592,9.75502 6.28527,9.90308 L8.52848,12.1269 L8.52848,10.4694 C8.52848,10.029 8.88552,9.67195 9.32595,9.67195 L10.8766,9.67195 C11.1034,9.67583 11.2517,9.64614 11.4599,9.55518 C11.6712,9.47132 11.7976,9.38635 11.9557,9.22185 C12.1193,9.06264 12.2044,8.9346 12.2881,8.72129 C12.3789,8.51076 12.4089,8.35901 12.4051,8.12943 L12.4051,3.13746 C12.4051,2.72681 12.2429,2.33394 11.9557,2.04503 C11.6687,1.75628 11.2804,1.59494 10.8766,1.59494 L3.12342,1.59494 Z\",\n  displayName: \"ChatIcon\",\n  viewBox: \"0 0 14 14\"\n});\n\nexport {\n  ChatIcon\n};\n","// src/Phone.tsx\nimport { createIcon } from \"@chakra-ui/icon\";\nvar PhoneIcon = createIcon({\n  d: \"M2.20731,0.0127209 C2.1105,-0.0066419 1.99432,-0.00664663 1.91687,0.032079 C0.871279,0.438698 0.212942,1.92964 0.0580392,2.95587 C-0.426031,6.28627 2.20731,9.17133 4.62766,11.0689 C6.77694,12.7534 10.9012,15.5223 13.3409,12.8503 C13.6507,12.5211 14.0186,12.037 13.9993,11.553 C13.9412,10.7397 13.186,10.1588 12.6051,9.71349 C12.1598,9.38432 11.2304,8.47427 10.6495,8.49363 C10.1267,8.51299 9.79754,9.05515 9.46837,9.38432 L8.88748,9.96521 C8.79067,10.062 7.55145,9.24878 7.41591,9.15197 C6.91248,8.8228 6.4284,8.45491 6.00242,8.04829 C5.57644,7.64167 5.18919,7.19632 4.86002,6.73161 C4.7632,6.59607 3.96933,5.41495 4.04678,5.31813 C4.04678,5.31813 4.72448,4.58234 4.91811,4.2919 C5.32473,3.67229 5.63453,3.18822 5.16982,2.45243 C4.99556,2.18135 4.78257,1.96836 4.55021,1.73601 C4.14359,1.34875 3.73698,0.942131 3.27227,0.612963 C3.02055,0.419335 2.59457,0.0708094 2.20731,0.0127209 Z\",\n  displayName: \"PhoneIcon\",\n  viewBox: \"0 0 14 14\"\n});\n\nexport {\n  PhoneIcon\n};\n","import React, { useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/contactSlice';\nimport { addContact } from 'redux/contactsOperations';\nimport { Input, InputGroup, InputLeftElement, Stack, Button } from '@chakra-ui/react';\nimport { ChatIcon, PhoneIcon } from '@chakra-ui/icons';\n\n\nexport default function ContactForm() {\n    const [name, setName] = useState('');\n    const [number, setNumber] = useState('');\n    const dispatch = useDispatch();\n    const contacts = useSelector(selectContacts);\n\n    const onSubmit = (e) => {\n        e.preventDefault();\n\n        const contact = {\n            name: name.trim(),\n            number: number.trim(),\n        }\n\n        if (contacts.findIndex(cont => cont.name.trim().toLowerCase() === contact.name.trim().toLowerCase()) >= 0) {\n            return alert(`${name} is already in contacts`)\n        }\n        dispatch(addContact(contact))\n\n        setName('')\n        setNumber('')\n    }\n\n    return (\n        <div>\n            <form action=\"\" onSubmit={onSubmit}>\n                <Stack spacing={4}>\n                    <label>Name\n                        <InputGroup>\n                            <InputLeftElement\n                                pointerEvents='none'\n                                children={<ChatIcon color='gray.300' />}\n                            />\n                            <Input variant='filled'\n                                placeholder='enter name contact'\n                                type=\"text\"\n                                name=\"name\"\n                                pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                                title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                                value={name}\n                                onChange={(e) => setName(e.target.value)}\n                                required />\n                        </InputGroup>\n                    </label>\n                    <label>Number\n                        <InputGroup>\n                            <InputLeftElement\n                                pointerEvents='none'\n                                children={<PhoneIcon color='gray.300' />}\n                            />\n                            <Input variant='filled'\n                                placeholder='enter phone number'\n                                type=\"tel\"\n                                name=\"number\"\n                                pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                                title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                                value={number}\n                                onChange={(e) => setNumber(e.target.value)}\n                                required />\n                        </InputGroup>\n                    </label>\n                    <Button colorScheme='gray' variant='solid' type='submit'> Add contact</Button>\n\n                </Stack>\n            </form>\n        </div >\n    )\n}\n","// src/list.tsx\nimport { Icon } from \"@chakra-ui/icon\";\nimport { createContext } from \"@chakra-ui/react-context\";\nimport { getValidChildren } from \"@chakra-ui/react-children-utils\";\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useMultiStyleConfig\n} from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar [ListStylesProvider, useListStyles] = createContext({\n  name: `ListStylesContext`,\n  errorMessage: `useListStyles returned is 'undefined'. Seems you forgot to wrap the components in \"<List />\" `\n});\nvar List = forwardRef(function List2(props, ref) {\n  const styles = useMultiStyleConfig(\"List\", props);\n  const {\n    children,\n    styleType = \"none\",\n    stylePosition,\n    spacing,\n    ...rest\n  } = omitThemingProps(props);\n  const validChildren = getValidChildren(children);\n  const selector = \"& > *:not(style) ~ *:not(style)\";\n  const spacingStyle = spacing ? { [selector]: { mt: spacing } } : {};\n  return /* @__PURE__ */ jsx(ListStylesProvider, { value: styles, children: /* @__PURE__ */ jsx(\n    chakra.ul,\n    {\n      ref,\n      listStyleType: styleType,\n      listStylePosition: stylePosition,\n      role: \"list\",\n      __css: { ...styles.container, ...spacingStyle },\n      ...rest,\n      children: validChildren\n    }\n  ) });\n});\nList.displayName = \"List\";\nvar OrderedList = forwardRef((props, ref) => {\n  const { as, ...rest } = props;\n  return /* @__PURE__ */ jsx(List, { ref, as: \"ol\", styleType: \"decimal\", marginStart: \"1em\", ...rest });\n});\nOrderedList.displayName = \"OrderedList\";\nvar UnorderedList = forwardRef(function UnorderedList2(props, ref) {\n  const { as, ...rest } = props;\n  return /* @__PURE__ */ jsx(List, { ref, as: \"ul\", styleType: \"initial\", marginStart: \"1em\", ...rest });\n});\nUnorderedList.displayName = \"UnorderedList\";\nvar ListItem = forwardRef(function ListItem2(props, ref) {\n  const styles = useListStyles();\n  return /* @__PURE__ */ jsx(chakra.li, { ref, ...props, __css: styles.item });\n});\nListItem.displayName = \"ListItem\";\nvar ListIcon = forwardRef(function ListIcon2(props, ref) {\n  const styles = useListStyles();\n  return /* @__PURE__ */ jsx(Icon, { ref, role: \"presentation\", ...props, __css: styles.icon });\n});\nListIcon.displayName = \"ListIcon\";\n\nexport {\n  useListStyles,\n  List,\n  OrderedList,\n  UnorderedList,\n  ListItem,\n  ListIcon\n};\n","// src/Delete.tsx\nimport { createIcon } from \"@chakra-ui/icon\";\nimport { jsx } from \"react/jsx-runtime\";\nvar DeleteIcon = createIcon({\n  displayName: \"DeleteIcon\",\n  path: /* @__PURE__ */ jsx(\"g\", { fill: \"currentColor\", children: /* @__PURE__ */ jsx(\"path\", { d: \"M19.452 7.5H4.547a.5.5 0 00-.5.545l1.287 14.136A2 2 0 007.326 24h9.347a2 2 0 001.992-1.819L19.95 8.045a.5.5 0 00-.129-.382.5.5 0 00-.369-.163zm-9.2 13a.75.75 0 01-1.5 0v-9a.75.75 0 011.5 0zm5 0a.75.75 0 01-1.5 0v-9a.75.75 0 011.5 0zM22 4h-4.75a.25.25 0 01-.25-.25V2.5A2.5 2.5 0 0014.5 0h-5A2.5 2.5 0 007 2.5v1.25a.25.25 0 01-.25.25H2a1 1 0 000 2h20a1 1 0 000-2zM9 3.75V2.5a.5.5 0 01.5-.5h5a.5.5 0 01.5.5v1.25a.25.25 0 01-.25.25h-5.5A.25.25 0 019 3.75z\" }) })\n});\n\nexport {\n  DeleteIcon\n};\n","import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts, selectFilter } from 'redux/contactSlice';\nimport { deleteContact, fetchContacts } from 'redux/contactsOperations';\nimport { List, ListItem, Button } from '@chakra-ui/react';\nimport { DeleteIcon } from '@chakra-ui/icons';\n// import Button from 'components/Button/Button';\n\nexport default function Contacts() {\n    const contacts = useSelector(selectContacts);\n    const filtering = useSelector(selectFilter);\n    const dispatch = useDispatch()\n\n    const filtered = React.useMemo(\n        () => contacts.filter(contact => contact.name.toLowerCase().includes(filtering.trim().toLowerCase())),\n        [contacts, filtering]\n    );\n\n    useEffect(() => {\n        dispatch(fetchContacts())\n    }, [dispatch]);\n\n    return (\n\n        <List spacing={3} w='33%' mt={3}>\n\n            {filtered.length > 0 && filtered.map(contact =>\n\n                <ListItem key={contact.id} display='flex' alignItems='center' justifyContent='space-between'>\n                    <p> {contact.name}: {contact.number}</p>\n                    <Button colorScheme='gray'\n                        variant='ghost'\n                        type='button'\n                        onClick={() => dispatch(deleteContact(contact.id))}\n\n                    ><DeleteIcon /></Button>\n\n                </ListItem>\n            )}\n        </List>\n\n    )\n}\n","// src/Search.tsx\nimport { createIcon } from \"@chakra-ui/icon\";\nvar SearchIcon = createIcon({\n  d: \"M23.384,21.619,16.855,15.09a9.284,9.284,0,1,0-1.768,1.768l6.529,6.529a1.266,1.266,0,0,0,1.768,0A1.251,1.251,0,0,0,23.384,21.619ZM2.75,9.5a6.75,6.75,0,1,1,6.75,6.75A6.758,6.758,0,0,1,2.75,9.5Z\",\n  displayName: \"SearchIcon\"\n});\n\nexport {\n  SearchIcon\n};\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { selectFilter, updateFilter } from 'redux/contactSlice'\nimport { Input, InputGroup, InputLeftElement, Stack } from '@chakra-ui/react'\nimport { SearchIcon } from '@chakra-ui/icons'\n\n\nexport default function Filter() {\n    const dispatch = useDispatch()\n    const filter = useSelector(selectFilter)\n    return (\n        <>\n            <Stack spacing={3}>\n                <label>Find contacts by name\n                    <InputGroup>\n                        <InputLeftElement\n                            pointerEvents='none'\n                            children={<SearchIcon color='gray.300' />}\n                        />\n                        <Input variant='filled'\n                            placeholder='. . .'\n                            type=\"text\"\n                            value={filter}\n                            onChange={e => dispatch(updateFilter(e.target.value))}\n                        />\n                    </InputGroup>\n                </label>\n            </Stack>\n        </>\n    )\n}\n","import ContactForm from 'components/ContactForm/ContactForm'\nimport Contacts from 'components/Contacts/Contacts'\nimport Filter from 'components/Filter/Filter'\nimport Section from 'components/Section/Section'\nimport React from 'react'\nimport { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { fetchContacts } from 'redux/contactsOperations'\n\nexport default function ContactsPage() {\n  const dispatch = useDispatch();\n  const isLoggedIn = useSelector(state => state.isLoggedIn);\n\n  useEffect(() => {\n    isLoggedIn && dispatch(fetchContacts())\n  }, [dispatch, isLoggedIn]);\n\n  return (\n    <div>\n      <Section>\n        <h1>Phonebook</h1>\n        <ContactForm />\n      </Section>\n\n\n      <Section>\n        <h2>Contacts</h2>\n        <Filter />\n        <Contacts />\n      </Section>\n    </div>\n  )\n}\n"],"names":["ChatIcon","createIcon","d","displayName","viewBox","PhoneIcon","ContactForm","useState","name","setName","number","setNumber","dispatch","useDispatch","contacts","useSelector","selectContacts","action","onSubmit","e","preventDefault","contact","trim","findIndex","cont","toLowerCase","alert","addContact","spacing","pointerEvents","children","color","I","variant","placeholder","type","pattern","title","value","onChange","target","required","colorScheme","createContext","errorMessage","ListStylesProvider","useListStyles","List","forwardRef","props","ref","styles","useMultiStyleConfig","omitThemingProps","styleType","stylePosition","rest","validChildren","getValidChildren","spacingStyle","mt","jsx","chakra","listStyleType","listStylePosition","role","__css","container","as","marginStart","ListItem","item","Icon","icon","DeleteIcon","path","fill","Contacts","filtering","selectFilter","filtered","React","filter","includes","useEffect","fetchContacts","w","length","map","display","alignItems","justifyContent","onClick","deleteContact","id","SearchIcon","Filter","updateFilter","ContactsPage","isLoggedIn","state","Section"],"sourceRoot":""}